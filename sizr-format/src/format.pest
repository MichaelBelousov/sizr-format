// Pest (PEG) grammar for the sizr-format formatting language

alpha = @{ 'a'..'z' | 'A'..'Z' }
num = @{ '0'..'9' }
alphanum = @{ alpha | num | "_" }
ident = @{ alpha ~ alphanum* }

expr = { var }
var = { "$" ~ ident }
breakpt = { "\\" }
cond = { (var | breakpt) ~ ("?"~expr)?  ~ (":"~expr)? }

// PUSH individual single quotes to handle via the stack?
body_start = { "'''" }
body_end = { "'''" }

node_body =  { body_start ~ (var | breakpt | cond)* ~ body_end }

node_decl = { ident ~ ":" ~ node_body }

file = { SOI ~ (EOI | (node_decl ~ NEWLINE)* ~ node_decl ~ EOI) }

COMMENT = { "#" ~ ANY* ~ NEWLINE }
