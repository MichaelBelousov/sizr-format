; ModuleID = 'test'
source_filename = "test"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"?Value" = type { %Value, i1 }
%Value = type { i32, i1 }
%Expr = type { i32, i1 }

define internal fastcc void @f(%"?Value"* nonnull sret(%"?Value") %0, %Expr* nonnull readonly align 4 %1) unnamed_addr #1 {
  %val = alloca i32, align 4
  %a = alloca i32, align 4
  %2 = alloca %"?Value", align 4
  %3 = alloca %"?Value", align 4
  store i32 0, i32* %val, align 4
  %4 = getelementptr inbounds %Expr, %Expr* %1, i32 0, i32 1
  %5 = load i1, i1* %4, align 1
  switch i1 %5, label %SwitchElse [
    i1 false, label %SwitchProng
  ]

SwitchElse:                                       ; preds = %Entry
  %6 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 1
  store i1 true, i1* %6, align 1
  %7 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  %8 = getelementptr inbounds %Value, %Value* %7, i32 0, i32 1
  store i1 true, i1* %8, align 1
  %9 = bitcast %Value* %7 to i8*
  %10 = bitcast %Value* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %9, i64 8, i1 false)
  %11 = getelementptr inbounds %"?Value", %"?Value"* %2, i32 0, i32 0
  %12 = bitcast %Value* %7 to i8*
  %13 = bitcast %Value* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %12, i64 8, i1 false)
  %14 = getelementptr inbounds %"?Value", %"?Value"* %2, i32 0, i32 1
  store i1 true, i1* %14, align 1
  br label %SwitchEnd

SwitchProng:                                      ; preds = %Entry
  %15 = getelementptr inbounds %Expr, %Expr* %1, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %a, align 4
  %17 = load i32, i32* %a, align 4
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 1
  store i1 true, i1* %19, align 1
  %20 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  br i1 %18, label %Then, label %Else

Else:                                             ; preds = %SwitchProng
  %21 = load i32, i32* %val, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %Then1, label %Else2

Then:                                             ; preds = %SwitchProng
  %23 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 1
  store i1 true, i1* %23, align 1
  %24 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  %25 = getelementptr inbounds %Value, %Value* %24, i32 0, i32 1
  store i1 false, i1* %25, align 1
  %26 = getelementptr inbounds %Value, %Value* %24, i32 0, i32 0
  store i32 0, i32* %26, align 4
  %27 = bitcast %Value* %24 to i8*
  %28 = bitcast %Value* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %27, i64 8, i1 false)
  br label %EndIf3

Then1:                                            ; preds = %Else
  %29 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 1
  store i1 true, i1* %29, align 1
  %30 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  %31 = getelementptr inbounds %Value, %Value* %30, i32 0, i32 1
  store i1 true, i1* %31, align 1
  %32 = bitcast %Value* %30 to i8*
  %33 = bitcast %Value* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %32, i64 8, i1 false)
  br label %EndIf

Else2:                                            ; preds = %Else
  %34 = getelementptr inbounds %Value, %Value* %30, i32 0, i32 1
  store i1 true, i1* %34, align 1
  %35 = bitcast %Value* %30 to i8*
  %36 = bitcast %Value* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %35, i64 8, i1 false)
  br label %EndIf

EndIf:                                            ; preds = %Else2, %Then1
  %37 = phi %Value* [ %30, %Then1 ], [ %30, %Else2 ]
  %38 = bitcast %Value* %37 to i8*
  %39 = bitcast %Value* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %38, i64 8, i1 false)
  br label %EndIf3

EndIf3:                                           ; preds = %EndIf, %Then
  %40 = phi %Value* [ %24, %Then ], [ %37, %EndIf ]
  %41 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 1
  store i1 true, i1* %41, align 1
  %42 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  %43 = bitcast %Value* %40 to i8*
  %44 = bitcast %Value* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %43, i64 8, i1 false)
  %45 = getelementptr inbounds %"?Value", %"?Value"* %3, i32 0, i32 0
  %46 = bitcast %Value* %40 to i8*
  %47 = bitcast %Value* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %46, i64 8, i1 false)
  %48 = getelementptr inbounds %"?Value", %"?Value"* %3, i32 0, i32 1
  store i1 true, i1* %48, align 1
  br label %SwitchEnd

SwitchEnd:                                        ; preds = %EndIf3, %SwitchElse
  ret void
}

; Function Attrs: nobuiltin nounwind
define internal fastcc i16 @"test \22\22"() unnamed_addr #1 {
Entry:
  %result = alloca i16, align 2
  %0 = alloca %"?Value", align 4
  call fastcc void @f(%"?Value"* sret(%"?Value") %0, %Expr* @53)
  store i16 0, i16* %result, align 2
  ret i16 0
}

;;; broken LLVM module found: Instruction does not dominate all uses!
  ;;; %30 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  ;;; %34 = getelementptr inbounds %Value, %Value* %30, i32 0, i32 1
;;; Instruction does not dominate all uses!
  ;;; %30 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  ;;; %35 = bitcast %Value* %30 to i8*
;;; Instruction does not dominate all uses!
  ;;; %30 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  ;;; %36 = bitcast %Value* %30 to i8*
;;; Instruction does not dominate all uses!
  ;;; %30 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  ;;; %37 = phi %Value* [ %30, %Then1 ], [ %30, %Else2 ]
;;; Instruction does not dominate all uses!
  ;;; %30 = getelementptr inbounds %"?Value", %"?Value"* %0, i32 0, i32 0
  ;;; %39 = bitcast %Value* %30 to i8*

;;; This is a bug in the Zig compiler.thread 2543749 panic: 
;;; ???:?:?: 0x55713dc2fad7 in ??? (???)
;;; ???:?:?: 0x55713ebc7719 in ??? (???)
;;; ???:?:?: 0x55713ebee9e9 in ??? (???)
;;; ???:?:?: 0x55713ebf3b6f in ??? (???)
;;; ???:?:?: 0x55713ebc3273 in ??? (???)
;;; ???:?:?: 0x55713e032de4 in ??? (???)
;;; ???:?:?: 0x55713dff368a in ??? (???)
;;; ???:?:?: 0x55713ddc7205 in ??? (???)
;;; ???:?:?: 0x55713ddba432 in ??? (???)
;;; ???:?:?: 0x55713ddb5fd1 in ??? (???)
;;; ???:?:?: 0x55713dd445ff in ??? (???)
;;; ???:?:?: 0x55713dc5e486 in ??? (???)
;;; ???:?:?: 0x55713dc2e316 in ??? (???)
;;; ???:?:?: 0x55713dc2daa9 in ??? (???)
